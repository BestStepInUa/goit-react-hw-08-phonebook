{"version":3,"file":"static/js/500.ad8ace66.chunk.js","mappings":"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","sources":["components/AddContactForm/Addcontactform.styled..js","redux/filter/filter-selectors.js","redux/contacts/contacts-selectors.js","components/AddContactForm/AddContactForm.jsx","components/ContactsFilter/ContactsFilter.styled.js","components/ContactsFilter/ContactsFilter.jsx","components/ContactsList/ContactItem/ContactItem.styled.js","components/ContactsList/ContactItem/ContactItem.jsx","components/ContactsList/ContactsList.styled.js","components/ContactsList/ContactsList.jsx","pages/ContactsPage/ContactPage.styled.js","pages/ContactsPage/ContactsPage.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nconst AddContactFormStyled = styled.form`\n    display: flex;\n    flex-direction: column;\n    gap: 5px;\n    margin-bottom: 25px;\n    label {\n        display: flex;\n        flex-direction: column;\n        font-size: 20px;\n    }\n    input,\n    button {\n        font-size: 16px;\n    }`\n    \nexport default AddContactFormStyled   ","export const selectFilter = state => state.filter;\n","import { createSelector } from '@reduxjs/toolkit';\nimport { selectFilter } from '../filter/filter-selectors';\n\nexport const selectContacts = state => state.contacts.items;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectError = state => state.contacts.error;\n\nexport const selectVisibleContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filter) => {\n    const normalizedFilter = filter.toLocaleLowerCase();\n    return contacts.filter(({ name }) =>\n      name.toLocaleLowerCase().includes(normalizedFilter)\n    );\n  }\n);\n","import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport toast from 'react-hot-toast';\nimport { addContact } from '../../redux/contacts/contacts-operations';\nimport AddContactFormStyled from './Addcontactform.styled.';\nimport { selectContacts } from '../../redux/contacts/contacts-selectors';\n\nconst INITIAL_STATE = {\n  name: '',\n  number: '',\n};\n\nconst AddContactForm = () => {\n  const [state, setState] = useState(INITIAL_STATE);\n  const contacts = useSelector(selectContacts);\n\n  const dispatch = useDispatch();\n\n  const handelChange = evt => {\n    const { name, value } = evt.target;\n    setState(prevState => ({ ...prevState, [name]: value }));\n  };\n\n  const handelFormSubmit = evt => {\n    evt.preventDefault();\n    const { name, number } = state;\n    const isDublicated = contacts.find(\n      contact => contact.name.toLowerCase() === name.toLowerCase()\n    );\n    if (isDublicated) {\n      toast.error(`${name} is already in contacts.`);\n      return;\n    }\n    dispatch(addContact({ name, number }));\n    reset();\n  };\n\n  const reset = () => {\n    setState(INITIAL_STATE);\n  };\n\n  return (\n    <AddContactFormStyled onSubmit={handelFormSubmit}>\n      <label>\n        Name\n        <input\n          type=\"text\"\n          name=\"name\"\n          value={state.name}\n          required\n          onChange={handelChange}\n        />\n      </label>\n      <label>\n        number\n        <input\n          type=\"tel\"\n          name=\"number\"\n          value={state.number}\n          required\n          onChange={handelChange}\n        />\n      </label>\n      <button type=\"submit\">Add contact</button>\n    </AddContactFormStyled>\n  );\n};\n\nexport default AddContactForm;\n","import styled from 'styled-components';\n\nconst ContactsFilterStyled = styled.label`\n    margin-bottom: 25px;`\n    \nexport default ContactsFilterStyled   ","import { useSelector, useDispatch } from 'react-redux';\nimport { changeFilter } from '../../redux/filter/filter-slice';\n\nimport ContactsFilterStyled from './ContactsFilter.styled';\nimport { selectFilter } from '../../redux/filter/filter-selectors';\n\nconst ContactsFilter = () => {\n  const name = useSelector(selectFilter);\n\n  const dispatch = useDispatch();\n\n  return (\n    <ContactsFilterStyled>\n      Find contacts by name:\n      <input\n        type=\"text\"\n        value={name}\n        onChange={evt => dispatch(changeFilter(evt.target.value))}\n      />\n    </ContactsFilterStyled>\n  );\n};\n\nexport default ContactsFilter;\n","import styled from 'styled-components';\n\nconst ContactItemStyled = styled.li`\n    display: flex;\n    gap: 5px;\n    p {\n        margin: 0;\n    }\n    button {\n        padding: 0;\n        align-items: center; \n    }`      \n\nexport default ContactItemStyled    ","import { useDispatch } from 'react-redux';\nimport { deleteContact } from '../../../redux/contacts/contacts-operations';\nimport ContactItemStyled from './ContactItem.styled';\n\nconst ContactItem = ({ contact: { id, name, number } }) => {\n  const dispatch = useDispatch();\n  return (\n    <ContactItemStyled>\n      <p>\n        {name}: <span>{number}</span>\n      </p>\n      <button onClick={() => dispatch(deleteContact(id))}>Delete</button>\n    </ContactItemStyled>\n  );\n};\n\nexport default ContactItem;\n","import styled from 'styled-components';\n\nconst ContactsListSteled = styled.div`\n  display: flex;\n  flex-direction: column;\n  h2 {\n    font-size: 20px;\n    font-weight: bold;\n    font-style: italic;\n    margin: 0;\n  }\n  ul {\n    display: flex;\n    flex-direction: column;\n    gap: 5px;\n    margin: 0;\n    padding: 0;\n    list-style-type: none;\n  }\n`;\n\nexport default ContactsListSteled;\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport ContactItem from './ContactItem';\nimport { fetchContacts } from '../../redux/contacts/contacts-operations';\n\nimport ContactsListSteled from './ContactsList.styled';\nimport {\n  selectError,\n  selectIsLoading,\n  selectVisibleContacts,\n} from '../../redux/contacts/contacts-selectors';\n\nconst ContactsList = () => {\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const visibleContacts = useSelector(selectVisibleContacts);\n\n  return (\n    <ContactsListSteled>\n      <h2>Contacts</h2>\n      {isLoading && !error && <b>Request in progress...</b>}\n      <ul>\n        {visibleContacts.map(contact => (\n          <ContactItem key={contact.id} contact={contact} />\n        ))}\n      </ul>\n    </ContactsListSteled>\n  );\n};\n\nexport default ContactsList;\n","import styled from 'styled-components';\n\nconst ContactsTitleStyled = styled.h2`\n  font-size: 30px;\n  font-weight: bold;\n  font-style: italic;\n  margin: 20px 0;\n`;\n\nexport default ContactsTitleStyled;\n","import AddContactForm from 'components/AddContactForm';\nimport ContactsFilter from 'components/ContactsFilter';\nimport ContactsList from 'components/ContactsList';\nimport ContactsTitleStyled from './ContactPage.styled';\n\nconst ContactsPage = () => {\n  return (\n    <>\n      <ContactsTitleStyled>My contacts</ContactsTitleStyled>\n      <AddContactForm />\n      <ContactsFilter />\n      <ContactsList />\n    </>\n  );\n};\n\nexport default ContactsPage;\n"],"names":["styled","_templateObject","_taggedTemplateLiteral","selectFilter","state","filter","selectContacts","contacts","items","selectIsLoading","isLoading","selectError","error","selectVisibleContacts","createSelector","normalizedFilter","toLocaleLowerCase","_ref","name","includes","INITIAL_STATE","number","_useState","useState","_useState2","_slicedToArray","setState","useSelector","dispatch","useDispatch","handelChange","evt","_evt$target","target","value","prevState","_objectSpread","_defineProperty","reset","_jsxs","AddContactFormStyled","onSubmit","preventDefault","find","contact","toLowerCase","toast","concat","addContact","children","_jsx","type","required","onChange","ContactsFilterStyled","changeFilter","_ref$contact","id","ContactItemStyled","onClick","deleteContact","useEffect","fetchContacts","visibleContacts","ContactsListSteled","map","ContactItem","_Fragment","ContactsTitleStyled","AddContactForm","ContactsFilter","ContactsList"],"sourceRoot":""}